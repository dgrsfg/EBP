<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.itcast.ssm.mapper.OrderlistMapper" >
  <resultMap id="BaseResultMap" type="cn.itcast.ssm.po.Orderlist" >
    <id column="lid" property="lid" jdbcType="INTEGER" />
    <result column="descs" property="descs" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="quantity" property="quantity" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="DOUBLE" />
    <result column="oid" property="oid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    lid, descs, price, quantity, amount, oid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.itcast.ssm.po.OrderlistExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orderlist
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from orderlist
    where lid = #{lid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from orderlist
    where lid = #{lid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.itcast.ssm.po.OrderlistExample" >
    delete from orderlist
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <select id="countByLid" parameterType="java.lang.Integer" resultType="java.lang.Integer" >
    select count(*) from orderlist where lid=#{lid,jdbcType=INTEGER}
  </select> 
  
  <insert id="insert" parameterType="cn.itcast.ssm.po.Orderlist" >
    insert into orderlist (lid, descs, price, 
      quantity, amount, oid
      )
    values (#{lid,jdbcType=INTEGER}, #{descs,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, 
      #{quantity,jdbcType=INTEGER}, #{amount,jdbcType=DOUBLE}, #{oid,jdbcType=INTEGER}
      )
  </insert>

  <insert id="insertSelective" parameterType="cn.itcast.ssm.po.Orderlist" >
    insert into orderlist
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="lid != null" >
        lid,
      </if>
      <if test="descs != null" >
        descs,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="quantity != null" >
        quantity,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="oid != null" >
        oid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="lid != null" >
        #{lid,jdbcType=INTEGER},
      </if>
      <if test="descs != null" >
        #{descs,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="quantity != null" >
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="oid != null" >
        #{oid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.itcast.ssm.po.OrderlistExample" resultType="java.lang.Integer" >
    select count(*) from orderlist
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update orderlist
    <set >
      <if test="record.lid != null" >
        lid = #{record.lid,jdbcType=INTEGER},
      </if>
      <if test="record.descs != null" >
        descs = #{record.descs,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.quantity != null" >
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.oid != null" >
        oid = #{record.oid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update orderlist
    set lid = #{record.lid,jdbcType=INTEGER},
      descs = #{record.descs,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      quantity = #{record.quantity,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=DOUBLE},
      oid = #{record.oid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.itcast.ssm.po.Orderlist" >
    update orderlist
    <set >
      <if test="descs != null" >
        descs = #{descs,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="quantity != null" >
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="oid != null" >
        oid = #{oid,jdbcType=INTEGER},
      </if>
    </set>
    where lid = #{lid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.itcast.ssm.po.Orderlist" >
    update orderlist
    set quantity = #{quantity,jdbcType=DOUBLE}+quantity
    where lid = #{lid,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultType="cn.itcast.ssm.po.Orderlist" >
    select * from orderlist;
  </select>
</mapper>